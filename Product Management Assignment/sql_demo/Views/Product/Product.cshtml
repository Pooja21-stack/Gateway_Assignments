@model sql_demo.Context.tbl_product
@{
    ViewBag.Title = "Product";
}
<style>
    .error{
        color:red;
    }
</style>
<h2>Add Product</h2>
@using(Html.BeginForm("AddProduct","Product",FormMethod.Post, new { enctype = "multipart/form-data"}))
{
<div class="container">
    <div class="form-group">
        @Html.HiddenFor(x => x.product_id)
        @Html.LabelFor(x => x.product_name, htmlAttributes: new { @class = "control-label col-md-2 required" })
        @Html.ValidationMessageFor(x => x.product_name, "", new { @class = "error" })
        @Html.TextBoxFor(x => x.product_name, new { @class = "form-control required" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.product_category, htmlAttributes: new { @class = "control-label col-md-2 required" })
        @Html.ValidationMessageFor(x => x.product_category, "", new { @class = "error" })
        @* @Html.DropDownListFor(model => model.product_category, new SelectList(new[] {
        "Clothes", "Toys"}))*@
       
        @Html.DropDownList("product_category", new List<SelectListItem>
        {
            new SelectListItem{Text="Pillows",Value="Pillows",Selected=true},
            new SelectListItem{Text="Toys",Value="Toys"},
            new SelectListItem{Text="Stationary items",Value="Stationary items"},


        }, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.price, htmlAttributes: new { @class = "control-label col-md-2 required" })
        @Html.ValidationMessageFor(x => x.price, "", new { @class = "error" })
        @Html.TextBoxFor(x => x.price, new { @class = "form-control required" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.quantity, htmlAttributes: new { @class = "control-label col-md-2 required" })
        @Html.ValidationMessageFor(x => x.quantity, "", new { @class = "error" })
        @Html.DropDownList("Quantity", new List<SelectListItem>
                 {
                     new SelectListItem{Text="1",Value="1",Selected=true},
                     new SelectListItem{Text="2",Value="2"},
                     new SelectListItem{Text="3",Value="3"},
                      new SelectListItem{Text="4",Value="4"},
                       new SelectListItem{Text="5",Value="5"},

                 }, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.short_desc, htmlAttributes: new { @class = "control-label col-md-2 required" })
        @Html.ValidationMessageFor(x => x.short_desc, "", new { @class = "error" })
        @Html.TextAreaFor(x => x.short_desc, new { @class = "form-control required", @rows = "5" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.long_desc, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.ValidationMessageFor(x => x.long_desc, "", new { @class = "error" })
        @Html.TextAreaFor(x => x.long_desc, new { @class = "form-control", @rows = "10" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.small_image, htmlAttributes: new { @class = "control-label col-md-2 required" })
        @Html.ValidationMessageFor(x => x.small_image, "", new { @class = "error" })
        @*@Html.TextBoxFor(x => x.small_image, new { @class = "form-control required  " })*@

        <input type="file" name="ImageFile" required />

    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.large_image, htmlAttributes: new { @class = "control-label col-md-2 " })
        @Html.ValidationMessageFor(x => x.large_image, "", new { @class = "error" })
        <input type="file" name="ImageFile" required />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-success">Submit</button>
        <button type="submit" class="btn btn-primary">Reset</button>
    </div>
</div>
}


